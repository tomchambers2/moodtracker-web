"use strict";angular.module("moodtrackerWebApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","utils","moodLogging","angularMoment","chartjs","ui.bootstrap","variantTools","n3-line-chart"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl"}).when("/settings",{templateUrl:"views/settings.html",controller:"SettingsCtrl"}).when("/settings",{templateUrl:"views/settings.html",controller:"SettingsCtrl"}).when("/record",{templateUrl:"views/record.html",controller:"RecordCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("moodtrackerWebApp").controller("MainCtrl",["$scope","$rootScope","$connect","$data","$sync","$auth","$timeout","messenger",function(a,b,c,d,e,f,g,h){a.loggedIn=f.check(),a.loginForm={};var i=c.ref,j=function(){a.mood={},d.getMoodlogNumbers(function(b){g(function(){for(var c in b)b[c].id=c;a.mood.data=b})})};j(),a.deleteRecord=function(a,b){d.deleteRecord(a,b).then(function(){h.success("Mood record deleted")},function(){throw h.error("Couldn't delete mood record"),new Error("Deleting a mood record failed",a)})};var k=function(c){return c?void h.error(c.message):(a.loggedIn=f.check(),a.$apply(),e.sync(),j(),h.success("Logged in"),void b.$broadcast("login"))};a.doLogin=function(){i.authWithPassword({email:a.loginForm.email,password:a.loginForm.password},k)},a.doRegister=function(){!a.loginForm.email&&a.loginForm.password&&h.warn("Please enter an email and password to register"),i.createUser({email:a.loginForm.email,password:a.loginForm.password},function(b){return b?void h.error(b.message):(h.success("Created account"),void a.doLogin(a.loginForm.email,a.loginForm.password))})},a.resetForm={},a.doPasswordReset=function(){i.resetPassword({email:a.resetForm.email},function(b){if(b)throw h.error(b.message),new Error("Could not reset password",a.resetForm.email);h.success("Your new password has been emailed to"+a.resetForm.email),g(function(){a.resetForm.email=""})})}}]),angular.module("moodtrackerWebApp").controller("AboutCtrl",["$scope","$data","$auth","$timeout",function(a,b,c){a.loggedIn=c.check(),a.options={axes:{x:{type:"date",key:"x"},y:{type:"linear",min:0,max:10,ticks:10}},series:[{y:"val_0",label:"Mood records",color:"#9467bd",axis:"y",type:"line",thickness:"3px",dotSize:2,id:"series_0"}],tooltip:{mode:"scrubber",formatter:function(a,b){return moment(a).fromNow()+" : "+b}},stacks:[],lineMode:"bundle",tension:1,drawLegend:!0,drawDots:!0,columnsHGap:5},b.getMoodlogNumbers(function(b){a.mood={data:[]};var c=moment().subtract(60,"minutes");for(var d in b)if(!moment(b[d].userTimestamp).isBefore(c)){var e={x:new Date(b[d].userTimestamp),val_0:b[d].level};a.mood.data.push(e),a.$apply()}})}]),angular.module("moodtrackerWebApp").controller("SettingsCtrl",["$scope","$auth","$connect","messenger","$sync",function(a,b,c,d,e){a.loggedIn=b.check();var f=c.ref;a.email=b.getUserData()&&b.getUserData().password.email;var g=b.getUserData();a.userEmail=g&&g.password.email,a.userId=g&&g.uid,a.authToken=g&&g.token;var h=function(c){return c?void d.error(c.message):(a.loggedIn=b.check(),a.$apply(),e.sync(),void $rootScope.$broadcast("login"))},i=function(a,b){f.authWithPassword({email:a,password:b},h)};a.emailForm={},a.doChangeEmail=function(){f.changeEmail({oldEmail:b.getUserData().password.email,newEmail:a.emailForm.email,password:a.emailForm.password},function(b){if(b)throw d.error(b.message),new Error("Could not reset password",a.emailForm.email);d.success("Your email has been set to "+a.emailForm.email),i(a.emailForm.email,a.emailForm.password),a.email=a.emailForm.email,a.emailForm=""})},a.changeForm={},a.doChangePassword=function(){a.changeForm.oldPassword&&a.changeForm.newPassword||d.warning("Please enter both your old and new password"),f.changePassword({email:b.getUserData().password.email,oldPassword:a.changeForm.oldPassword,newPassword:a.changeForm.newPassword},function(b){if(b)throw d.error(err.message),new Error("Could not reset password");d.success("Your password has been changed"),a.changeForm={}})}}]),angular.module("moodtrackerWebApp").controller("RecordCtrl",["$scope","$localStorage","$timeout","$connect","$connection","$auth","$data",function(a,b,c,d,e,f,g){a.loggedIn=f.check();d.ref;a.saveMood=function(a){g.saveMood(a)}}]),angular.module("moodtrackerWebApp").directive("syncChecker",["$rootScope","$timeout","$sync",function(a,b,c){return{restrict:"E",template:'<div class="alert alert-warning text-center" role="alert" ng-if="alert.msg" type="info" close="close.alert()"><p><i class="fa fa-exclamation-triangle"></i> {{alert.msg}}</p> <p><button class="btn btn-success" ng-click="sync()">Sync data</button> <button class="btn btn-danger" ng-click="clear()">Delete data</button></p></div>',link:function(d){a.$on("unauthSync",function(a,c,e,f){b(function(){d.alert={msg:"You have "+c+" unsynced anonymous mood records. Do you want to sync them with this account?"},d.sync=function(){e(),d.alert=null},d.clear=function(){f(),d.alert=null}})}),c.checkUnauthSync()}}}]),angular.module("moodtrackerWebApp").filter("orderObjectBy",function(){return function(a,b,c){var d=[];return angular.forEach(a,function(a){d.push(a)}),d.sort(function(a,c){return a[b]>c[b]?1:-1}),c&&d.reverse(),d}}),angular.module("moodtrackerWebApp").controller("HeaderCtrl",["$scope","$location","$auth","$anchorScroll",function(a,b,c,d){a.isActive=function(a){return a===b.path()},a.scrollToLogin=function(){b.hash("login"),d()},a.loggedIn=c.check(),a.logout=function(){c.doLogout(),a.loggedIn=c.check(),window.location.reload()},a.$on("login",function(){a.loggedIn=c.check(),a.$apply()})}]),angular.module("moodLogging",[]).factory("$connect",[function(){return{ref:new Firebase("https://moodtrackerapp.firebaseio.com")}}]).factory("$auth",["$connect","$localStorage","messenger",function(a,b,c){var d=a.ref;return{check:function(){var a=d.getAuth();return!!a},uid:function(){return d.getAuth().uid},getUserData:function(){var a=d.getAuth();return a},doLogout:function(){return b.set("moodCache",null),c.success("Logged out"),a.ref.unauth()}}}]).service("$data",["$connect","$q","$auth","$localStorage","$connection","messenger","$rootScope",function(a,b,c,d,e,f,g){var h=a.ref,i=function(a){if(c.uid){var b=d.getObject(c.uid+"offlineMoods");if(!b.length)return a;a||(a={});for(var e=0;e<b.length;e++)b[e].offline="offline",a[b[e].userTimestamp]=b[e],a[b[e].userTimestamp].id=b[e].userTimestamp;return a}},j=function(a){var b=d.getObject("moods");if(!b.length)return a;a||(a={});for(var c=0;c<b.length;c++)b[c].offline="unauth",a[b[c].userTimestamp]=b[c],a[b[c].userTimestamp].id=b[c].userTimestamp;return a},k=function(a){function b(){for(var b in d)d[b].id=b;var c=i(d);c=j(c),console.log("sending appended data",c),a(c)}var d;g.$on("moods_changed",function(){b(),a(appendedData)}),e.getStatus()&&c.check()?(console.log("Online. Authed. Showing fb data + offline + unauth"),h.child("moodlogNumbers").child(c.getUserData().uid).on("value",function(a){d=a.val(),b()},function(a){throw new Error("failed to get mood data",a)})):c.check()?(console.log("Offline. Authed. Showing offline + unauth"),d=null,b(),h.child("moodlogNumbers").child(c.getUserData().uid).on("value",function(a){d=a.val(),b()},function(a){throw new Error("failed to get mood data",a)})):(console.log("Offline. Unauthed. Showing unauth"),d=null,b())},l=function(a){var b={level:a,serverTimestamp:Firebase.ServerValue.TIMESTAMP,userTimestamp:Date.now()};if(c.check()||(d.push("moods",b),f.warning("You're not logged in. Mood saved locally. Login or register to sync.")),!e.getStatus())return d.push(c.uid+"offlineMoods",b),void f.warning("You're offline. Mood saved locally. Will be synced automatically when next online");var g=c.getUserData();g&&h.child("moodlogNumbers").child(g.uid).push(b,function(a){if(a)throw f.error("Something went wrong and your mood wasn't saved"),new Error(a,"Mood logging failed");f.success("Mood saved successfully")})},m=function(a,e){var f=c.getUserData();return console.log("deleting",a,e),b(function(b,i){if("offline"===e)a=parseInt(a,10),d.removeByUserTimestamp(c.uid+"offlineMoods",a),g.$broadcast("moods_changed");else if("unauth"===e)a=parseInt(a,10),d.removeByUserTimestamp("moods",a),g.$broadcast("moods_changed");else{var j=function(a){a?i():b()};console.log("ID",a),h.child("moodlogNumbers").child(f.uid).child(a).remove(j)}})};return{ref:h,getMoodlogNumbers:k,saveMood:l,deleteRecord:m}}]).service("$sync",["$connect","$auth","$localStorage","$rootScope","$timeout","messenger",function(a,b,c,d,e,f){var g=a.ref,h=function(a){var e=c.getObject(a);if(e.length>0){for(var h=e.length-1;h>=0;h--)g.child("moodlogNumbers").child(b.getUserData().uid).push(e[h],function(e){if(e)throw f.error("Aborting due to sync failure"),new Error("error syncing",e,"user data:",b.getUserData());c.pop(a),d.$emit("moods_changed")});f.success("Synced "+e.length+" records")}},i=function(){h("moods")},j=function(){c.setObject("moods",[]),d.$emit("moods_changed"),f.success("Deleted anonymous moods")},k=function(){if(b.check()){var a=c.length("moods");a&&d.$emit("unauthSync",a,i,j)}},l=function(){if(b.check()){var a=function(a){c.setObject("moodCache",a)};g.child("moodlogNumbers").child(b.getUserData().uid).on("value",function(b){a(b.val())},function(a){throw new Error("failed to get mood data",a)}),h(b.uid+"offlineMoods");var e=c.length("moods");e&&d.$emit("unauthSync",e,i,j)}};return{sync:l,checkUnauthSync:k}}]),angular.module("utils",[]).factory("$localStorage",["$window","$rootScope",function(a){return{set:function(b,c){a.localStorage[b]=c},get:function(b,c){return a.localStorage[b]||c},setObject:function(b,c){a.localStorage[b]=JSON.stringify(c)},getObject:function(b){return JSON.parse(a.localStorage[b]||"{}")},push:function(b,c){var d=a.localStorage[b];d=d?JSON.parse(d):[],d.push(c),a.localStorage[b]=JSON.stringify(d)},length:function(b){var c=a.localStorage[b];return c=c?JSON.parse(c):[],c.length},pop:function(b){var c=a.localStorage[b];if(c){c=JSON.parse(c);var d=c.length-1;c.splice(d,1)}else c=[];a.localStorage[b]=JSON.stringify(c)},removeByUserTimestamp:function(b,c){var d=a.localStorage[b];d?(d=JSON.parse(d),d=_.reject(d,{userTimestamp:c})):d=[],a.localStorage[b]=JSON.stringify(d)}}}]).service("$connection",["$sync",function(a){var b,c=new Firebase("https://moodtrackerapp.firebaseio.com/.info/connected");return c.on("value",function(c){c.val()?(b=!0,a.sync()):b=!1}),{getStatus:function(){return b}}}]),angular.module("variantTools",[]).service("messenger",[function(){return{warning:toastr.warning,error:toastr.error,success:toastr.success}}]);